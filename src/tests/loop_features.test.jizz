// Test skibidi loop
buss("--- Testing skibidi loop ---");
ts count = 1;
ts sum = 0;
skibidi (count <= 5) {
    buss("Count:", count);
    sum = sum + count;
    count = count + 1;
}
buss("Sum of 1-5:", sum);  // Should be 15

// Test too loop
buss("\n--- Testing too loop ---");
ts forSum = 0;
too (ts i = 1; i <= 5; i = i + 1) {
    buss("Iteration:", i);
    forSum = forSum + i;
}
buss("Sum of 1-5 (too loop):", forSum);  // Should be 15

// Test nested loops
buss("\n--- Testing nested loops ---");
buss("Multiplication table 3x3:");
too (ts i = 1; i <= 3; i = i + 1) {
    // Create a new row variable for each iteration
    ts rowStr = "";
    too (ts j = 1; j <= 3; j = j + 1) {
        rowStr = rowStr + (i * j) + "   ";  // Using spaces instead of tab
    }
    buss(rowStr);
}

// Test loop with conditionals
buss("\n--- Testing loops with conditionals ---");
too (ts i = 1; i <= 10; i = i + 1) {
    ts half = i / 2;
    ts isEven = (i % 2 == 0);  // Simpler way to check if even
    if (isEven) {
        buss(i, "is even");
    } else {
        buss(i, "is odd");
    }
}

// Test empty condition parts in too loop
buss("\n--- Testing too loop with optional parts ---");
ts x = 0;
too (ts i = 0; i < 5;) {
    buss("Value of i:", i);
    i = i + 1;
}

// Test skibidi loop with complex condition
buss("\n--- Testing skibidi loop with complex condition ---");
ts a = 1;
ts b = 10;
skibidi (a < 5) {
    if (b > 5) {
        buss("a =", a, "b =", b);
        a = a + 1;
        b = b - 1;
    } else {
        // Exit the loop
        a = 100;
    }
}
buss("Final: a =", a, "b =", b); 